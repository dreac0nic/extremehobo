<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_aj_idle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Acceleration</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>32</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Friction</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>17</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>JumpStrength</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>8</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IsGrounded</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MaximumSpeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>8</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Calculate player velocities. 
// Convert time to seconds for calculations
var delta = 0.000001*delta_time;

// Check to see if grounded or not
IsGrounded = collision_line(x, y, x, y + 1, obj_GrassPlatform, false, true);

// Apply jump if key is pressed!
if(IsGrounded &amp;&amp; keyboard_check_pressed(global.Key_Jump)) {
  vspeed -= JumpStrength;
}

// Apply gravity!
if(!IsGrounded) {
  vspeed += global.gravity*delta;
}

// Apply horizontal movement!
var h_potential = clamp(MaximumSpeed - abs(hspeed), 0, Acceleration*delta);

if(keyboard_check(global.Key_MoveRight)) {
  hspeed += h_potential;
}

if(keyboard_check(global.Key_MoveLeft)) {
  hspeed -= h_potential;
}

// Apply friction over time, if moving.
if(abs(hspeed) &gt; 0) {
  hspeed -= sign(hspeed)*clamp(abs(hspeed), 0, Friction*delta);
}

// Check collisions for this next frame to ensure a clean run
if(place_meeting(x + hspeed, y, obj_GrassPlatform)) {
  while(!place_meeting(x + sign(hspeed), y, obj_GrassPlatform)) {
    x += sign(hspeed);
  }
  
  hspeed = 0;
}

if(place_meeting(x, y + vspeed, obj_GrassPlatform)) {
  while(!place_meeting(x, y + sign(vspeed), obj_GrassPlatform)) {
    y += sign(vspeed);
  }
  
  vspeed = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change sprite based on velocities
if(abs(hspeed) &gt; 0) {
  image_xscale = sign(hspeed);
}

if(vspeed &gt; 0) {
  sprite_index = spr_aj_fall_loop;
} else if(abs(hspeed) &gt; 0) {
  if(sprite_index == spr_aj_idle) {
    sprite_index = spr_aj_walk_init;
  } else {
    sprite_index = spr_aj_walk_loop;
  }
} else {
  sprite_index = spr_aj_idle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
